#Z = 1, D = 0
#assigned coddle, actually arrested
coddle_arrest <- mdve_clean[T_RANDOM > 1 & T_FINAL == 1,]
#check that subsets are exhaustive
length(mdve_clean$T_RANDOM)
length(coddle_coddle$T_RANDOM) + length(coddle_arrest$T_RANDOM) + length(arrest_coddle$T_RANDOM) + length(arrest_arrest$T_RANDOM)
length(assign_arrest$T_RANDOM) + length(assign_coddle$T_RANDOM)
# previous 3 lines all output 330 => good!
#interpreting "taking" to mean coddle
#proportion of always-takers
#P(coddle | arrest) = p(arrest_coddle)/p(arrest)
p_A <- length(arrest_coddle$T_RANDOM)/length(assign_arrest$T_RANDOM)
#proportion of never-takers
#P(arrest | coddle) = p(coddle_arrest)/p(coddle)
p_N <- length(coddle_arrest$T_RANDOM)/length(assign_coddle$T_RANDOM)
#proportion of compliers
#E(D|Z = 1) - E(D|Z = 0) = P(D = 1|Z = 1) - P(D = 1| Z=0)
p_C <- length(coddle_coddle$T_RANDOM)/length(assign_coddle$T_RANDOM) - length(arrest_coddle$T_RANDOM)/length(assign_arrest$T_RANDOM)
#check
p_N + p_A + p_C
###########################
#Question 2
#attach file
attach(final4_hw)
#dummies for >=40, >=80
final4_hw$over40 <- (final4_hw$c_size >= 40) + 0
final4_hw$over80 <- (final4_hw$c_size >= 80) + 0
#subset 8-neighborhood of c_size 40+-, c_size 80+-
pm40 <- final4_hw[c_size >= 32 & c_size <= 48,]
pm80 <- final4_hw[c_size >= 72 & c_size <= 88,]
#plots
plot(pm40$c_size, pm40$classct, main = "Treatment", xlab = "enrollment", ylab = "classes")
plot(pm80$c_size, pm80$classct, main = "Treatment", xlab = "enrollment", ylab = "classes")
#dummy for class sizes being 2 and 3
final4_hw$class_2 <- (final4_hw$classct >= 2) + 0
final4_hw$class_3 <- (final4_hw$classct >= 3) + 0
#regress class count on enrollment (first-stage)
reg_40_on_class2 <- lm(class_2 ~ over40, pm40)
reg_40_on_class2 <- lm(class_2 ~ over40, pm40)
pm40 <- final4_hw[c_size >= 32 & c_size <= 48,]
pm80 <- final4_hw[c_size >= 72 & c_size <= 88,]
#plots
plot(pm40$c_size, pm40$classct, main = "Treatment", xlab = "enrollment", ylab = "classes")
plot(pm80$c_size, pm80$classct, main = "Treatment", xlab = "enrollment", ylab = "classes")
#both data sets look reasonale => sanity check is good
#dummy for class sizes being 2 and 3
final4_hw$class_2 <- (final4_hw$classct >= 2) + 0
final4_hw$class_3 <- (final4_hw$classct >= 3) + 0
#regress class count on enrollment (first-stage)
reg_40_on_class2 <- lm(class_2 ~ over40, pm40)
summary(reg_40_on_class2)
View(pm40)
#attach file
attach(final4_hw)
#dummies for >=40, >=80
final4_hw$over40 <- (final4_hw$c_size >= 40) + 0
final4_hw$over80 <- (final4_hw$c_size >= 80) + 0
#dummy for class sizes being 2 and 3
final4_hw$class_2 <- (final4_hw$classct >= 2) + 0
final4_hw$class_3 <- (final4_hw$classct >= 3) + 0
#subset 8-neighborhood of c_size 40+-, c_size 80+-
pm40 <- final4_hw[c_size >= 32 & c_size <= 48,]
pm80 <- final4_hw[c_size >= 72 & c_size <= 88,]
#plots
plot(pm40$c_size, pm40$classct, main = "Treatment", xlab = "enrollment", ylab = "classes")
plot(pm80$c_size, pm80$classct, main = "Treatment", xlab = "enrollment", ylab = "classes")
#both data sets look reasonale => sanity check is good
#regress class count on enrollment (first-stage)
reg_40_on_class2 <- lm(class_2 ~ over40, pm40)
summary(reg_40_on_class2)
pm40$fitted_40 <- fitted(reg_40_on_class2)
reg_2_40_on_class2 <- lm(avgverb ~ fitted_40, pm40)
summary(reg_2_40_on_class2)
#2SLS
IV_40 <- ivreg(formula = avgverb ~ class_2 | over40, data = pm40)
summary(IV_40)
#regress class count on enrollment (first-stage)
reg_80_on_class3 <- lm(class_3 ~ over80, pm80)
summary(reg_80_on_class3)
pm80$fitted_80 <- fitted(reg_80_on_class3)
reg_2_80_on_class3 <- lm(avgverb ~ fitted_80, data = pm80)
summary(reg_2_80_on_class3)
#2SLS
IV_80 <- ivreg(formula = avgverb ~ class_3 | over80, data = pm80)
summary(IV_80)
install.packages("data.table")
install.packages("Matrix")
install.packages("matlib");
library(data.table)
library(Matrix)
library(matlib)
x = c(1,2,3)
x[1]
x[1:2]
x[-1]
M = matrix(1:9, ncol=3)
M[1,1]
M[1,]
M[,2:3]
M
diag(3)
diag(c(1,2,3))
diag(3:7)
diag(c(3:7))
determinant(M)
determinant.matrix(M)
determinant(diag(c(3,3,3)))
M1 <- diag(c(3,3,3))
determinant(M1)
M1
det(M1)
M1[3,2] <- 3
M1[2,3] <- 3
M1
M1[3,2] <- 1
M1[2,3] <- 1
M1
det(M1)
chol(M1)
M1 <- diag(c(3,2,3))
M1
det(M1)
M1[3,2] <- 1
M1[2,3] <- 1
M1
chol(M1)
eigen(M1)
M1 <- diag(c(3,2,3))
eigen(M1)
chol(M1)
eigen(M1)$vectors
M2 <- matrix(c(1,0), c(1,1), ncol = 2)
M2
M2 <- matrix(c(1,0,1,1), ncol = 2)
M2
eigen(M2)
M2[2,2] <- M[2,2] - 1e-5
M2
eigen(M2)
M1 <- diag(c(3,2,3))
M1
eigen(M1)$vectors
eigen(M1)
f = functio(x){
f = functio(x){
return(sum(x^2))
}
f = function(x){
return(sum(x^2))
}
f(2)
f(2,3)
f(c(2,3))
g0 = function(h, x:y){
t <- (y-x)/2
if(h(t) > 1e-5){
return g0(h, x:t)
}
if(h(t) < -1e-5){
return g0(h, t:y)
}
return(t)
}
g0 = function(h, y){
t <- y/2
if(h(t) > 1e-5){
return g0(h, 0:t)
}
if(h(t) < -1e-5){
return g0(h, t:y)
}
return(t)
}
g0 = function(h, y){
t <- y/2
if(h(t) > 1e-5){
return(g0(h, 0:t))
}
if(h(t) < -1e-5){
return(g0(h, t:y))
}
return(t)
}
g0(f, 3)
g0 = function(h, x, y){
t <- (y-x)/2
if(h(t) > 1e-5){
return(g0(h, x, t))
}
if(h(t) < -1e-5){
return(g0(h, t, y))
}
return(t)
}
g0(f, 3)
g0(f, 3, 6)
g0 = function(h, x, y){
t <- (y-x)/2
if(h(t) > 1e-3){
return(g0(h, x, t))
}
if(h(t) < -1e-3){
return(g0(h, t, y))
}
return(t)
}
g0(f, 3, 6)
g0 = function(h, x, y){
t <- (y-x)/2
if(h(t) > 1e-5){
return(g0(h, x, t))
}
if(h(t) < -1e-5){
return(g0(h, t, y))
}
return(t)
}
g0(f, -1, 1)
g0 = function(h, x, y){
t <- (y-x)/2
if(h(t) > 1e-3){
return(g0(h, x, t))
}
if(h(t) < -1e-3){
return(g0(h, t, y))
}
return(t)
}
g0(f, -1, 1)
g0 = function(h, x, y){
t <- (y-x)/2
if(h(t) > 1e-2){
return(g0(h, x, t))
}
if(h(t) < -1e-2){
return(g0(h, t, y))
}
return(t)
}
g0(f, -1, 1)
g0 = function(h, x, y){
t <- (y-x)/2
if(h(t) > 1e-1){
return(g0(h, x, t))
}
if(h(t) < -1e-1){
return(g0(h, t, y))
}
return(t)
}
g0(f, -1, 1)
g0 = function(h, x, y){
t <- (y-x)/2
if(h(t) > 1){
return(g0(h, x, t))
}
if(h(t) < -1){
return(g0(h, t, y))
}
return(t)
}
g0(f, -1, 1)
g0 = function(h, x, y){
t <- (y+x)/2
if(h(t) > 1){
return(g0(h, x, t))
}
if(h(t) < -1){
return(g0(h, t, y))
}
return(t)
}
g0(f, -1, 1)
g0(f, -3, 1)
g0 = function(h, x, y){
t <- (y+x)/2
if(h(t) > 1e-5){
return(g0(h, x, t))
}
if(h(t) < -1e-5){
return(g0(h, t, y))
}
return(t)
}
g0(f, -3, 1)
g0 = function(h, x, y){
t <- (y+x)/2
if(h(t) > 1e-3){
return(g0(h, x, t))
}
if(h(t) < -1e-3){
return(g0(h, t, y))
}
return(t)
}
g0(f, -3, 1)
g0 = function(h, x, y){
t <- (y+x)/2
if(h(t) > 1e-2){
return(g0(h, x, t))
}
if(h(t) < -1e-2){
return(g0(h, t, y))
}
return(t)
}
g0(f, -3, 1)
g0 = function(h, x, y){
t <- (x+y)/2
val = h(t)
print(val
if(val > 1e-2){
return(g0(h, x, t))
}
if(val < -1e-2){
return(g0(h, t, y))
}
return(t)
}
print(val)
g0 = function(h, x, y){
t <- (x+y)/2
val = h(t)
print(val)
if(val > 1e-2){
return(g0(h, x, t))
}
if(val < -1e-2){
return(g0(h, t, y))
}
return(t)
}
g0(f, -3, 1)
g0 = function(h, x, y){
t <- (x+y)/2
val = h(t)
print("t = ", t, ", val = ", val)
if(val > 1e-2){
return(g0(h, x, t))
}
if(val < -1e-2){
return(g0(h, t, y))
}
return(t)
}
g0(f, -3, 1)
g0 = function(h, x, y){
t <- (x+y)/2
val = h(t)
print("t = "+ t + ", val = "+ val)
if(val > 1e-2){
return(g0(h, x, t))
}
if(val < -1e-2){
return(g0(h, t, y))
}
return(t)
}
g0(f, -3, 1)
g0 = function(h, x, y){
t <- (x+y)/2
val = h(t)
print("t = %t, val = %val")
if(val > 1e-2){
return(g0(h, x, t))
}
if(val < -1e-2){
return(g0(h, t, y))
}
return(t)
}
g0(f, -3, 1)
g0 = function(h, x, y){
t <- (x+y)/2
val = h(t)
print(cat("t = ", t, " val = ", val))
if(val > 1e-2){
return(g0(h, x, t))
}
if(val < -1e-2){
return(g0(h, t, y))
}
return(t)
}
g0(f, -3, 1)
g0(f, -3, 1)
g0 = function(h, x, y){
t <- (x+y)/2
val = h(t)
print(cat("t = ", t, " val = ", val))
# if(val > 1e-2){
#   return(g0(h, x, t))
# }
# if(val < -1e-2){
#   return(g0(h, t, y))
# }
# return(t)
}
g0(f, -3, 1)
g0 = function(h, x, y){
t <- (x+y)/2
val <- h(t)
print(cat("t = ", t, " val = ", val))
# if(val > 1e-2){
#   return(g0(h, x, t))
# }
# if(val < -1e-2){
#   return(g0(h, t, y))
# }
# return(t)
}
g0(f, -3, 1)
f = function(x){
return(sum(x^3))
}
f = function(x){
return(sum(x^3))
}
f(2)
f(c(2,3))
g0 = function(h, x, y){
t <- (x+y)/2
val <- h(t)
print(cat("t = ", t, " val = ", val))
if(val > 1e-2){
return(g0(h, x, t))
}
if(val < -1e-2){
return(g0(h, t, y))
}
return(t)
}
g0(f, -3, 1)
g0(f, -100, 1)
g0 = function(h, x, y){
t <- (x+y)/2
val <- h(t)
print(cat("t = ", t, " val = ", val))
if(val > 1e-5){
return(g0(h, x, t))
}
if(val < -1e-5){
return(g0(h, t, y))
}
return(t)
}
g0(f, -100, 1)
g0(f, -1000, 1)
g0(f, -1000, 1e-3)
g0(f, -1000, 1e-3)
g0(f, -1000, 1e-5)
f = function(x){
return(sum((x-3.1415)^3))
}
f(2)
f(c(2,3))
g0 = function(h, x, y){
t <- (x+y)/2
val <- h(t)
print(cat("t = ", t, " val = ", val))
if(val > 1e-5){
return(g0(h, x, t))
}
if(val < -1e-5){
return(g0(h, t, y))
}
return(t)
}
g0(f, -1000, 6)
install.packages("lfe")
source('~/UChiGit/Skwad/Empirical Analysis III/Problem Sets/Code_Pset4_Chase.R', echo=TRUE)
source('~/UChiGit/Skwad/Empirical Analysis III/Problem Sets/Code_Pset4_Chase.R', echo=TRUE)
install.packages("lfe")
sessionInfo()
sessionInfo()
pwd()
pwd
getwd()
setwd(/Users/chaseabram/UChiGit/Dingel Fall 2020/Assignment 2)
setwd("/Users/chaseabram/UChiGit/Dingel Fall 2020/Assignment 2")
getwd()
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
install.packages("fixest")
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
df$flow
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
my_reg
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
summary(my_reg)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
getcd()
getwd()
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
source('~/UChiGit/Dingel Fall 2020/Assignment 2/R_est.R', echo=TRUE)
